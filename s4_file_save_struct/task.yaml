/solution.c.sol: |-
    int fd = open(filename,O_WRONLY|O_CREAT, S_IRUSR|S_IWUSR);
    if(fd == -1)
        return -1;
    for(int i = 0; i < size; i++){
        if((int)write(fd, (void *) &pt[i], sizeof(point_t)) == -1)
            return -1;
    }
    close(fd);
    return 0;
accessible: true
author: Olivier Martin
context: |-
    Given an array of ``struct 3dpoint`` defined below, write a C code to write the array of struct into a file named ``save.txt``. You have to write all elements sequentially.

    .. code-block:: c

        typedef struct point{
            int x;
            int y;
            int z;
        } point_t;
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S5] Save struct into file'
network_grading: false
order: 24
problems:
    q1:
        type: code
        language: ''
        name: ''
        header: |-
            .. code-block:: c

                /*
                 * @pre pt != NULL
                 *      size >= 0, the length of the array.
                 *      filename != NULL
                 * @post write the array of struct in the file.
                 *       return 0 is everything occurs fine. -1 otherwise.
                 */
                int save(point_t* pt, int size, char* filename)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 0
        visible: true
        id: open
        name: Open
        description: This tag validate you are able to open a file.
    '1':
        type: 0
        description: This tag validate that your close are correctly performed.
        name: Close
        visible: true
        id: close
    '2':
        id: failure_handling
        name: Failure handling
        description: You do not manage failures properly during write operations.
        type: 1
        visible: true
    '3':
        description: You code do not compile.
        visible: true
        name: Not compile
        id: not_compile
        type: 1
    '4':
        id: memory
        type: 1
        name: Memory Exceeded
        description: ''
        visible: false
    '5':
        description: ''
        id: sigfpe
        type: 1
        visible: true
        name: Floating Point Exception
    '6':
        name: Double free
        id: double_free
        type: 1
        visible: true
        description: Your code produced a double free.
    '7':
        description: You use some banned functions.
        id: banned_funcs
        type: 1
        name: Banned functions
        visible: false
    '8':
        visible: true
        type: 1
        name: Timeout
        description: Your code exceeds the maximum allowed time.
        id: timeout
    '9':
        name: Segmentation Fault
        id: sigsegv
        description: ''
        type: 1
        visible: true
    '10':
        name: S5
        type: 2
        visible: true
        description: ''
        id: ''
    '11':
        description: ''
        type: 2
        name: File
        visible: true
        id: ''
weight: 1.0
