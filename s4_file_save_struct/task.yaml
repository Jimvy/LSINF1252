/student/student_code.c.tpl: |+
    #include <stdio.h>
    #include <stdlib.h>
    #include <errno.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <unistd.h>
    #include <string.h>

    int save(struct point* pt, size_t len, char* filename){
    @    @q1@@
    }


/student/student_code.h: |-
    typedef struct point{
        int x;
        int y;
        int z;
    } point_t;

    int save(struct point* pt, size_t len, char* filename);
/student/tests.c: |
    // CTester template

    #include <stdlib.h>
    #include "student_code.h"
    #include "CTester/CTester.h"

    point_t* gen_struct(int size){
        point_t tab[size] = malloc(size*sizeof(point_t));

        //if (tab == NULL)
        //    return (point_t*)NULL;
        for (int i = 0; i < size; i++){
            tab[i].x = i+i;
            tab[i].y = i+i+i;
            tab[i].z = i+i*i;
        }
        return tab;
    }

    /*
     * Test with open fail
     */
    void test() {
        set_test_metadata("q1", _("Test fail open"), 1);
        int size = 3;
        int ret = 0;
        point_t* tab = gen_struct(size);

        monitored.open = true;
        failures.open = FAIL_TWICE;
        failures.open_ret = -1;

        SANDBOX_BEGIN;
        ret = save(tab, size, "file.txt");
        SANDBOX_END;

        free(tab);

        if (ret != -1){
            push_info_msg(_("bla"));
            CU_FAIL();
    }



    int main(int argc,char** argv){
        BAN_FUNCS(system);
        RUN(test);
    }
accessible: true
author: Olivier Martin
context: |-
    Given an array of ``struct 3dpoint`` defined below, write a C code to write the array of struct into a file named ``save.txt``. You have to write all elements sequentially.

    .. code-block:: c

        typedef struct 3dpoint{
            int x;
            int y;
            int z;
        } 3dpoint_t;
environment: pyjavacpp
evaluate: best
groups: false
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S5] Save struct into file'
network_grading: false
order: 24
problems:
    q1:
        language: ''
        type: code
        name: ''
        header: |-
            .. code-block:: c

                /*
                 * @pre pt != NULL
                 *      len >= 0, the length of the array.
                 *      filename != NULL
                 * @post write the array of struct in the file.
                 */
                int save(struct point* pt, size_t len, char* filename)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        name: File
        type: 2
        description: ''
        visible: true
        id: ''
    '1':
        description: ''
        type: 2
        name: S5
        visible: true
        id: ''
weight: 1.0
