accessible: true
author: Olivier Martin
context: |-
    *Estimated time: 25 minutes*

    You are currently processing an array composed of ``struct point`` defined below. In this programme, you need to store the content of the entire array in a file to be able to reuse it later. Write a C function to write the array composed of ``struct point`` into a file. The file may already exist or not. After the execution of the function, the file should only contain the array. If the file has to be created, the user who created it must have the permission to read it.

    .. code-block:: c

        typedef struct point {
            int x;
            int y;
            int z;
        } point_t;

    Use only ``open(2)``, ``write(2)`` and ``close(2)``. You can only call ``write(2)`` once.

    Hint : read carefully the man page of ``open(2)`` to manage all the  cases mentionned above.
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S5] Save struct into file'
network_grading: false
order: 49
problems:
    q1:
        language: c
        type: code
        header: |-
            .. code-block:: c

                /*
                 * @pre pt != NULL, pointer to the first point_t in the array
                 *      size > 0, the length of the array.
                 *      filename != NULL
                 * @post writes the array of point_t in the file.
                 *       return 0 is everything worked correctly
                 *       -1 if open() failed.
                 *       -2 if write() failed.
                 *       -3 if close() failed.
                 */
                int save(point_t *pt, int size, char *filename) {
        name: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: open
        name: Open
        visible: true
        description: This tag validate you are able to open a file.
        type: 0
    '1':
        id: close
        description: This tag validate that your close are correctly performed.
        type: 0
        visible: true
        name: Close
    '10':
        visible: true
        id: banned_funcs
        name: Banned functions
        description: You use some banned functions.
        type: 1
    '2':
        type: 1
        visible: true
        id: timeout
        description: Your code exceeds the maximum allowed time.
        name: Timeout
    '3':
        visible: true
        description: ''
        id: sigsegv
        name: Segmentation Fault
        type: 1
    '4':
        type: 1
        visible: true
        id: too_many_op
        description: You call the read or write function more than necessary.
        name: Too many read/write
    '5':
        type: 1
        visible: true
        id: failure_handling
        description: You do not manage failures properly during write operations.
        name: Failure handling
    '6':
        description: You code do not compile.
        name: Not compile
        type: 1
        visible: true
        id: not_compile
    '7':
        name: Memory Exceeded
        type: 1
        id: memory
        visible: true
        description: ''
    '8':
        id: sigfpe
        name: Floating Point Exception
        visible: true
        description: ''
        type: 1
    '9':
        id: double_free
        visible: true
        description: Your code produced a double free.
        name: Double free
        type: 1
    '11':
        type: 2
        visible: true
        name: S5
        description: ''
        id: ''
    '12':
        type: 2
        description: ''
        visible: true
        name: File
        id: ''
weight: 1.0
