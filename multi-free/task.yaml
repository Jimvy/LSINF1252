accessible: false
author: Louis Navarre & Alexandre Gobeaux
context: |-
    You are asked to implement the function ``free_all``, which will free all the memory associated with the following structure *university_t*:

    .. code-block:: c

        typedef struct university {
            char* city;
            int creation;
            person_t* rector;
        } university_t;

    The structure *person_t* is the following:

    .. code-block:: c

        typedef struct person {
            char* name;
            int salary;
            int age;
        } person_t;

    The *name* and the *city* have been allocated with *malloc*.

    *Hint:* all the data may not have been initialised correctly. Therefore, you have to handle all the cases (e.g. some pointers can be already NULL, and don't need to be freed).
environment: cpp
evaluate: best
groups: false
input_random: '0'
limits:
    time: '30'
    memory: '100'
    output: '2'
name: '[S3] Free the memory'
network_grading: false
order: 31
problems:
    free_all:
        default: ''
        name: Free all
        type: code
        header: |-
            Write the body of the function ``free_all``.

            .. code-block:: c

                /*
                 * Frees all the memory associated with u
                 * @pre: u != NULL
                 */
                 void free_all(university_t* u){
        language: c
    init_all:
        name: Init all
        default: ''
        header: |-
            Write the body of the function ``init_all``. You must copy the strings.

            *Hint :* Use strcpy.

            .. code-block:: c

                /*
                 * @return: a pointer to the university structure containing the elements
                 */
                 university_t* init_all(char* city, int creation, char* rectname, int age, int salary){
        language: c
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 2
        name: S3
        visible: true
        description: ''
        id: ''
weight: 1.0
