accessible: true
author: Olivier Martin
context: Given a file containing arbitrary bytes, you are asked to define a function
    that copy the file. You can not modify the content of the original file.
environment: cpp
evaluate: best
groups: false
limits:
    time: '30'
    output: '2'
    memory: '100'
name: '[S5] File copy'
network_grading: false
order: 37
problems:
    q1:
        type: code
        name: ''
        header: |-
            Write here the body of the function

            .. code-block:: c

                /*
                 * @pre file_name != NULL, name of the original file
                 *      new_file_name != NULL, name of the new file (the copy)
                 *
                 * @post copy the content of {file_name} in {new_file_name}.
                 *       return 0 if the function terminates with success. -1 in case of errors.
                 */
                int copy(char* file_name, char* new_file_name)
        language: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        name: Close
        type: 0
        visible: true
        description: This tag validate that your close are correctly performed.
        id: close
    '1':
        type: 0
        visible: true
        name: Permission
        description: This tag validate that you are able to copy permission of a file.
        id: permission
    '2':
        description: This tag validate you are able to copy a file.
        visible: true
        id: copy
        type: 0
        name: Copy
    '3':
        name: Open
        type: 0
        visible: true
        description: This tag validate you are able to open a file.
        id: open
    '10':
        visible: true
        type: 1
        description: Your code exceeds the maximum allowed time.
        name: Timeout
        id: timeout
    '11':
        name: Original file modified
        id: original_modif
        visible: true
        description: You have modified the original file.
        type: 1
    '12':
        visible: true
        id: failure_handling
        name: Failure handling
        description: You do not manage failures during the copy properly.
        type: 1
    '4':
        description: ''
        type: 1
        id: sigfpe
        name: Floating Point Exception
        visible: true
    '5':
        id: sigsegv
        name: Segmentation Fault
        type: 1
        description: ''
        visible: true
    '6':
        id: banned_funcs
        type: 1
        description: You use some banned functions.
        name: Banned functions
        visible: true
    '7':
        description: ''
        id: memory
        name: Memory Exceeded
        visible: true
        type: 1
    '8':
        name: Not compile
        id: not_compile
        type: 1
        description: You code does not compile.
        visible: true
    '9':
        id: double_free
        description: Your code produced a double free.
        visible: true
        name: Double free
        type: 1
    '13':
        description: ''
        name: File
        type: 2
        visible: true
        id: ''
    '14':
        name: S5
        type: 2
        visible: true
        description: ''
        id: ''
weight: 1.0
