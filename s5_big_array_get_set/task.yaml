/student/student_code.c.tpl: |+
    #include <stdio.h>
    #include <stdlib.h>
    #include <errno.h>
    #include <sys/types.h>
    #include <sys/stat.h>
    #include <fcntl.h>
    #include <unistd.h>
    #include <string.h>

    int get(int index) {
    @    @q1@@
    }

    void set(int index, int value) {
    @    @q2@@
    }

accessible: true
author: Olivier Martin
context: |-
    Given a file containing a huge array of integers, you are asked to write a function to edit a value of the array and another to retrieve a value from the array.

    Since the array is huge, you can not load it entierly into memory. Consequently, you have to naviguate directly through the array in the file by using ``lseek()``.
environment: cpp
evaluate: best
groups: false
limits:
    memory: '10'
    time: '30'
    output: '2'
name: '[S5] Get and set on array in file'
network_grading: false
order: 19
problems:
    q1:
        type: code
        language: ''
        header: |-
            .. code-block:: c

                int get(int index)
        name: ''
    q2:
        type: code
        name: ''
        language: ''
        header: |-
            .. code-block:: c

                void set(int index, int value)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: close
        name: Close
        type: 0
        description: This tag validate that your close are correctly performed.
        visible: true
    '1':
        name: Open
        type: 0
        id: open
        visible: true
        description: This tag validate you are able to open a file.
    '2':
        id: banned_funcs
        type: 1
        visible: true
        name: Banned functions
        description: You use some banned functions.
    '3':
        type: 1
        description: Your code produced a double free.
        visible: true
        name: Double free
        id: double_free
    '4':
        type: 1
        description: You do not manage failures during the copy properly.
        name: Failure handling
        id: failure_handling
        visible: true
    '5':
        type: 1
        visible: true
        id: sigfpe
        name: Floating Point Exception
        description: ''
    '6':
        description: ''
        id: memory
        visible: true
        name: Memory Exceeded
        type: 1
    '7':
        type: 1
        name: Not compile
        id: not_compile
        visible: true
        description: You code do not compile.
    '8':
        name: Timeout
        description: Your code exceeds the maximum allowed time.
        visible: true
        type: 1
        id: timeout
    '9':
        type: 2
        visible: true
        name: File
        description: ''
        id: ''
weight: 1.0
