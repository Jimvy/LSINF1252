/student/student_code.h: |-
    unsigned int get(char* filename, unsigned int index);
    void set(char* filename, unsigned int index, unsigned int value);
accessible: true
author: Olivier Martin
context: |-
    Given a file containing a huge array of integers, you are asked to write a function to edit a value of the array and another to retrieve a value from the array.

    Since the array is huge, you can not load it entierly into memory. Consequently, you have to naviguate directly through the array in the file by using ``lseek()``.
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '50'
    time: '30'
name: '[S5] Get and set on array in file'
network_grading: false
order: 26
problems:
    q1:
        type: code
        language: ''
        name: ''
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post return the integer at the index {index} of the array in the file {filename}
                 */
                int get(char* filename, int index)
    q2:
        language: ''
        name: ''
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post set the integer present in the file {filename}
                 *       at index {index} at value {value}
                 */
                void set(char* filename, int index, int value)
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 0
        name: Close
        visible: true
        id: close
        description: This tag validate that your close are correctly performed.
    '1':
        type: 0
        description: This tag validate you are able to open a file.
        name: Open
        visible: true
        id: open
    '2':
        id: banned_funcs
        name: Banned functions
        description: You use some banned functions.
        type: 1
        visible: true
    '3':
        description: Your code produced a double free.
        visible: true
        name: Double free
        id: double_free
        type: 1
    '4':
        visible: true
        id: failure_handling
        type: 1
        name: Failure handling
        description: You do not manage failures during the copy properly.
    '5':
        id: sigfpe
        visible: true
        type: 1
        description: ''
        name: Floating Point Exception
    '6':
        name: Memory Exceeded
        id: memory
        type: 1
        visible: true
        description: ''
    '7':
        visible: true
        name: Not compile
        description: You code do not compile.
        id: not_compile
        type: 1
    '8':
        visible: true
        type: 1
        name: Timeout
        description: Your code exceeds the maximum allowed time.
        id: timeout
    '9':
        name: File
        description: ''
        type: 2
        visible: true
        id: ''
weight: 1.0
