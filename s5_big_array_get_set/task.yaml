accessible: true
author: Olivier Martin
context: |-
    *Estimated time: 30 minutes*

    Given a file containing a large array of integers, you have to write a function to edit the element at a given index the array and another function to retrieve a specific element from this array.

    Since the array is huge, you cannot load it completely in memory. Consequently, you have to naviguate directly through the array in the file by using `lseek(2)`_ .

    You may want to use `fstat(2)`_ to obtain informations about a given file.

    Use only `open(2)`_, `read(2)`_, `write(2)`_ and `close(2)`_ and `lseek(2)`_
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '50'
    time: '30'
name: '[S5] Get and set on array stored in binary file '
network_grading: false
order: 48
problems:
    q1:
        language: c
        type: code
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post return the integer at the index {index}
                 *       of the array in the file {filename}.
                 *       return -1 in case of error.
                 *       return -2 if index >= length of array.
                 */
                int get(char *filename, int index) {
        name: Retrieve the element at a given index
    q2:
        language: c
        name: Retrieve the value at a given index
        type: code
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post set the element in the file {filename}
                 *       at index {index} at value {value}.
                 *       do nothing in case of errors
                 */
                void set(char *filename, int index, int value) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: close
        name: Close
        visible: true
        description: This tag validate that your close are correctly performed.
        type: 0
    '1':
        id: open
        description: This tag validate you are able to open a file.
        type: 0
        visible: true
        name: Open
    '10':
        visible: true
        id: oob
        name: Out of bounds
        description: You try to read outside of the array.
        type: 1
    '11':
        id: too_many_op
        type: 1
        visible: true
        name: Too many read/write
        description: You call the read or write function more than necessary.
    '12':
        type: 1
        visible: true
        id: sigsegv
        description: ''
        name: Segmentation Fault
    '13':
        name: Banned functions
        id: banned_funcs
        type: 1
        description: You use some banned functions.
        visible: true
    '14':
        type: 1
        description: Your code produced a double free.
        visible: true
        id: double_free
        name: Double free
    '15':
        name: Failure handling
        id: failure_handling
        description: You do not manage failures properly.
        visible: true
        type: 1
    '2':
        type: 1
        visible: true
        id: sigfpe
        description: ''
        name: Floating Point Exception
    '3':
        visible: true
        description: ''
        id: memory
        name: Memory Exceeded
        type: 1
    '4':
        type: 1
        visible: true
        name: Not compile
        id: not_compile
        description: You code do not compile.
    '5':
        type: 1
        description: You have modified the original file.
        visible: true
        id: original_modif
        name: Original file modified
    '6':
        description: The value written in the file has not the correct value.
        name: Wrong Set Value
        type: 1
        visible: true
        id: wrong_set_value
    '7':
        name: Wrong Index Set
        type: 1
        id: wrong_index_set
        visible: true
        description: A value at an unwanted index was modified.
    '8':
        id: wrong_get_value_returned
        name: Wrong Get Value Returned
        visible: true
        description: The get() function did not return the expected value.
        type: 1
    '9':
        id: timeout
        visible: true
        description: Your code exceeds the maximum allowed time.
        name: Timeout
        type: 1
    '16':
        visible: true
        name: File
        type: 2
        description: ''
        id: ''
    '17':
        description: ''
        name: S5
        visible: true
        type: 2
        id: ''
weight: 1.0
