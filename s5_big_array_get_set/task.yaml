accessible: true
author: Olivier Martin
context: |-
    *Estimated time: 30 minutes*

    Given a file containing a huge array of integers, you are asked to write a function to edit an integer inside the array, and another function to retrieve a specific integer from this array.

    Since the array is huge, you can not load it entirely into memory. Consequently, you have to naviguate directly through the array in the file by using `lseek(2) <https://sites.uclouvain.be/SystInfo/manpages/man2/lseek.2.html>`_.

    You may want to use `fstat(2) <https://linux.die.net/man/2/fstat>`_ to get informations about the file.

    Use only ``open(2)``, ``read(2)``, ``write(2)`` and ``close(2)``.
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '50'
name: '[S5] Get and set on array in file'
network_grading: false
order: 41
problems:
    q1:
        type: code
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post return the integer at the index {index}
                 *       of the array in the file {filename}.
                 *       return -1 in case of error.
                 *       return -2 if index >= length of array.
                 */
                int get(char *filename, int index) {
        name: ''
        language: c
    q2:
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL, index >= 0
                 * @post set the integer present in the file {filename}
                 *       at index {index} at value {value}.
                 *       do nothing if something fails.
                 */
                void set(char *filename, int index, int value) {
        name: ''
        type: code
        language: c
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        name: Close
        type: 0
        visible: true
        description: This tag validate that your close are correctly performed.
        id: close
    '1':
        visible: true
        name: Open
        description: This tag validate you are able to open a file.
        type: 0
        id: open
    '10':
        visible: true
        type: 1
        description: You have modified the original file.
        name: Original file modified
        id: original_modif
    '11':
        name: Wrong Set Value
        id: wrong_set_value
        description: The value written in the file has not the correct value.
        type: 1
        visible: true
    '12':
        visible: true
        id: wrong_index_set
        name: Wrong Index Set
        description: A value at an unwanted index was modified.
        type: 1
    '13':
        description: The get() function did not return the expected value.
        name: Wrong Get Value Returned
        type: 1
        visible: true
        id: wrong_get_value_returned
    '14':
        type: 1
        name: Timeout
        description: Your code exceeds the maximum allowed time.
        visible: true
        id: timeout
    '15':
        visible: true
        id: oob
        name: Out of bounds
        type: 1
        description: You try to read outside of the array.
    '2':
        visible: true
        description: You call the read or write function more than necessary.
        id: too_many_op
        type: 1
        name: Too many read/write
    '3':
        name: Segmentation Fault
        type: 1
        visible: true
        description: ''
        id: sigsegv
    '4':
        id: banned_funcs
        description: You use some banned functions.
        type: 1
        name: Banned functions
        visible: true
    '5':
        id: double_free
        type: 1
        name: Double free
        description: Your code produced a double free.
        visible: true
    '6':
        id: failure_handling
        type: 1
        description: You do not manage failures properly.
        name: Failure handling
        visible: true
    '7':
        description: ''
        id: sigfpe
        name: Floating Point Exception
        visible: true
        type: 1
    '8':
        name: Memory Exceeded
        id: memory
        type: 1
        description: ''
        visible: true
    '9':
        id: not_compile
        description: You code do not compile.
        visible: true
        name: Not compile
        type: 1
    '16':
        name: File
        visible: true
        type: 2
        description: ''
        id: ''
    '17':
        description: ''
        name: S5
        visible: true
        type: 2
        id: ''
weight: 1.0
