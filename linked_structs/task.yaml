accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    You have a linked list. Each element of the list is a ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S4] Filtering a linked list '
network_grading: false
order: 46
problems:
    includes:
        name: Includes
        language: ''
        type: code
        header: 'Please insert here the ``#include`` that are required to use the
            functions that you use to answer this question. These includes are specified
            in the man pages of the functions that you use. '
    filter:
        language: c
        header: |-
            We want to filter this list and extract the elements with an even index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function ``pair_filter``.

            Hint : You should use `memcpy(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/memcpy.3.html>`_ for this question

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking the elements with an even index
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
        name: Filtering
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: timeout
        description: Your code exceeds the maximum allowed time.
        type: 1
        name: Timeout
        visible: true
    '1':
        visible: true
        description: ''
        id: sigsegv
        type: 1
        name: Segmentation Fault
    '2':
        description: You code does not compile.
        name: Not compile
        type: 1
        id: not_compile
        visible: true
    '3':
        visible: true
        name: Memory Exceeded
        type: 1
        id: memory
        description: ''
    '4':
        id: sigfpe
        description: ''
        visible: true
        type: 1
        name: Floating Point Exception
    '5':
        type: 1
        id: double_free
        description: Your code produced a double free.
        name: Double free
        visible: true
    '6':
        description: You use some banned functions.
        id: banned_funcs
        visible: true
        type: 1
        name: Banned functions
    '7':
        description: ''
        name: S4
        visible: true
        type: 2
        id: ''
weight: 1.0
