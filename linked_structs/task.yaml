accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    You have a linked list. Each element of the list is a ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
input_random: '0'
limits:
    time: '30'
    output: '2'
    memory: '100'
name: '[S4] Filtering a linked list '
network_grading: false
order: 49
problems:
    includes:
        default: ''
        name: Includes
        header: 'Please insert here the ``#include`` that are required to use the
            functions that you use to answer this question. These includes are specified
            in the man pages of the functions that you use. '
        type: code
        language: ''
    filter:
        name: Filtering
        type: code
        language: c
        default: ''
        header: |-
            We want to filter this list and extract the elements with an even index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function ``pair_filter``.

            Hint : You should use `memcpy(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/memcpy.3.html>`_ for this question

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking the elements with an even index
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 1
        visible: true
        description: Your code exceeds the maximum allowed time.
        id: timeout
        name: Timeout
    '1':
        id: sigsegv
        type: 1
        description: ''
        name: Segmentation Fault
        visible: true
    '2':
        name: Not compile
        description: You code does not compile.
        id: not_compile
        type: 1
        visible: true
    '3':
        visible: true
        name: Memory Exceeded
        type: 1
        id: memory
        description: ''
    '4':
        visible: true
        description: ''
        id: sigfpe
        name: Floating Point Exception
        type: 1
    '5':
        id: double_free
        description: Your code produced a double free.
        visible: true
        type: 1
        name: Double free
    '6':
        name: Banned functions
        description: You use some banned functions.
        type: 1
        visible: true
        id: banned_funcs
    '7':
        visible: true
        description: ''
        type: 2
        name: S4
        id: ''
weight: 1.0
