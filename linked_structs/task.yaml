accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    You have a linked list. Each element of the list is a ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
limits:
    memory: '100'
    time: '30'
    output: '2'
name: '[S3] Filtering a linked list '
network_grading: false
order: 37
problems:
    includes:
        language: ''
        header: Here you can add your includes for this task. We strongly recommend
            you to read the manpage given in question 2 !
        name: Includes
        type: code
    filter:
        type: code
        language: c
        name: Filtering
        header: |-
            We want to filter this list and only take the elements with a pair index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function *pair_filter*.

            Hint : You have to use `memcpy <https://linux.die.net/man/3/memcpy>`_ to do this

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking one element out of two
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 1
        name: Timeout
        id: timeout
        visible: true
        description: Your code exceeds the maximum allowed time.
    '1':
        type: 1
        visible: true
        description: ''
        id: sigsegv
        name: Segmentation Fault
    '2':
        type: 1
        id: not_compile
        name: Not compile
        description: You code does not compile.
        visible: true
    '3':
        visible: true
        description: ''
        name: Memory Exceeded
        type: 1
        id: memory
    '4':
        visible: true
        id: sigfpe
        description: ''
        type: 1
        name: Floating Point Exception
    '5':
        type: 1
        visible: true
        name: Double free
        id: double_free
        description: Your code produced a double free.
    '6':
        visible: true
        type: 1
        name: Banned functions
        description: You use some banned functions.
        id: banned_funcs
    '7':
        name: S3
        type: 2
        description: ''
        visible: true
        id: ''
weight: 1.0
