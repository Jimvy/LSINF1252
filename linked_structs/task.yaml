accessible: false
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    We have a linked list, built with ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
limits:
    time: '30'
    memory: '100'
    output: '2'
name: '[S3] Filtering a linked list - WIP'
network_grading: false
order: 30
problems:
    includes:
        language: ''
        type: code
        header: Here you can add your includes for this task. We strongly recommend
            you to read the manpage given in question 2 !
        name: Includes
    filter:
        header: |-
            We want to filter this list and only take the elements with a pair index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function *pair_filter*.

            Hint : You have to use `memcpy <https://linux.die.net/man/3/memcpy>`_ to do this

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking one element out of two
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
        type: code
        name: Filtering
        language: c
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        visible: true
        id: timeout
        name: Timeout
        description: Your code exceeds the maximum allowed time.
        type: 1
    '1':
        visible: true
        description: ''
        id: sigsegv
        type: 1
        name: Segmentation Fault
    '2':
        description: You code does not compile.
        visible: true
        name: Not compile
        id: not_compile
        type: 1
    '3':
        visible: true
        name: Memory Exceeded
        id: memory
        type: 1
        description: ''
    '4':
        description: ''
        visible: true
        name: Floating Point Exception
        type: 1
        id: sigfpe
    '5':
        visible: true
        id: double_free
        type: 1
        name: Double free
        description: Your code produced a double free.
    '6':
        description: You use some banned functions.
        id: banned_funcs
        name: Banned functions
        type: 1
        visible: true
    '7':
        name: S3
        type: 2
        description: ''
        visible: true
        id: ''
weight: 1.0
