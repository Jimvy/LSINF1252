accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    We have a linked list, built with ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S3] Filtering a linked list - REVIEWED'
network_grading: false
order: 37
problems:
    includes:
        language: ''
        header: Here you can add your includes for this task. We strongly recommend
            you to read the manpage given in question 2 !
        name: Includes
        type: code
    filter:
        name: Filtering
        language: c
        type: code
        header: |-
            We want to filter this list and only take the elements with a pair index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function *pair_filter*.

            Hint : You have to use `memcpy <https://linux.die.net/man/3/memcpy>`_ to do this

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking one element out of two
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        description: Your code exceeds the maximum allowed time.
        name: Timeout
        visible: true
        type: 1
        id: timeout
    '1':
        description: ''
        type: 1
        id: sigsegv
        visible: true
        name: Segmentation Fault
    '2':
        name: Not compile
        description: You code does not compile.
        type: 1
        visible: true
        id: not_compile
    '3':
        type: 1
        id: memory
        visible: true
        description: ''
        name: Memory Exceeded
    '4':
        description: ''
        name: Floating Point Exception
        id: sigfpe
        type: 1
        visible: true
    '5':
        description: Your code produced a double free.
        name: Double free
        visible: true
        id: double_free
        type: 1
    '6':
        type: 1
        id: banned_funcs
        name: Banned functions
        description: You use some banned functions.
        visible: true
    '7':
        description: ''
        visible: true
        type: 2
        name: S3
        id: ''
weight: 1.0
