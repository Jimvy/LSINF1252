accessible: true
author: Mathieu Xhonneux, Nicolas Rybowski
context: |-
    You have a linked list. Each element of the list is a ``struct node``.

    .. code-block:: c

        struct node {
            struct node *next;
            int hash;
            int id;
            char name[20];
            char buffer[100];
            unsigned int timestamp;
            char acl;
            short flow;
            char *parent;
            void *fifo;
        };
environment: pyjavacpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S4] Filtering a linked list '
network_grading: false
order: 43
problems:
    includes:
        language: ''
        header: 'Please insert here the ``#include`` that are required to use the
            functions that you use to answer this question. These includes are specified
            in the man pages of the functions that you use. '
        name: Includes
        type: code
    filter:
        name: Filtering
        language: c
        header: |-
            We want to filter this list and extract the elements with an even index (the index starts at 0, hence the first, the third, the fifth, ... elements of the linked list have to be taken), without modifying the initial list.

            Write the body of the function ``pair_filter``.

            Hint : You should use `memcpy(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/memcpy.3.html>`_ for this question

            .. code-block:: c

                /* pair_filter
                 * Make a copy of the linked list starting at head,
                 * only taking the elements with an even index
                 *
                 * @head : head of a linked list, possibly NULL
                 * @return: pointer to the filtered linked list, return NULL if error or if head == NULL
                 */
                struct node *pair_filter(struct node *head) {
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        visible: true
        name: Timeout
        id: timeout
        description: Your code exceeds the maximum allowed time.
        type: 1
    '1':
        type: 1
        visible: true
        id: sigsegv
        name: Segmentation Fault
        description: ''
    '2':
        type: 1
        name: Not compile
        description: You code does not compile.
        id: not_compile
        visible: true
    '3':
        visible: true
        description: ''
        type: 1
        id: memory
        name: Memory Exceeded
    '4':
        visible: true
        type: 1
        name: Floating Point Exception
        id: sigfpe
        description: ''
    '5':
        type: 1
        name: Double free
        visible: true
        description: Your code produced a double free.
        id: double_free
    '6':
        name: Banned functions
        id: banned_funcs
        type: 1
        visible: true
        description: You use some banned functions.
    '7':
        name: S4
        visible: true
        type: 2
        description: ''
        id: ''
weight: 1.0
