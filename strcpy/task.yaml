accessible: true
author: Nicolas Rybowski
context: |-
    The classic function ``char *strncpy(char *destination, const char *source, size_t num);`` `strcpy(3) <https://linux.die.net/man/3/strcpy>`_ needs a destination buffer where the source string is copied. We ask you to code a function which allocates a buffer itself, and then proceeds to the copy.

    *Hint*
    ======

    Use `malloc <https://linux.die.net/man/3/malloc>`_
environment: cpp
evaluate: best
groups: false
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S3] Improved strncpy - CHANGE REQUESTED - malloc(1)'
network_grading: false
order: 26
problems:
    strcpy_impl:
        type: code
        name: buf_strcpy
        language: c
        header: |
            Write the body of the function *buf_strcpy*.

            .. code-block:: c

                /*
                * Create a buffer the same size as src, and copy the content of src to this buffer.
                *
                * @src: string to be copied
                * @return: return pointer. if src == NULL or in case of error, return NULL
                *
                * Take care of '\0' and the working of strlen() (if you use it).
                */
                char *buf_strcpy(const char *src) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: timeout
        name: Timeout
        visible: true
        type: 1
        description: Your code exceeds the maximum allowed time.
    '1':
        id: sigsegv
        description: ''
        name: Segmentation Fault
        visible: true
        type: 1
    '2':
        id: not_compile
        type: 1
        name: Not compile
        visible: true
        description: You code does not compile.
    '3':
        description: ''
        name: Memory Exceeded
        id: memory
        visible: true
        type: 1
    '4':
        name: Floating Point Exception
        description: ''
        visible: true
        id: sigfpe
        type: 1
    '5':
        id: double_free
        visible: true
        description: Your code produced a double free.
        name: Double free
        type: 1
    '6':
        id: banned_funcs
        description: You use some banned functions.
        type: 1
        visible: true
        name: Banned functions
    '7':
        id: malloc_fail
        name: Malloc fail
        description: You do not manage the case where malloc() fails.
        type: 1
        visible: true
    '9':
        visible: true
        type: 2
        description: ''
        name: S3
        id: ''
weight: 1.0
