#!/bin/python3

# Script d'interface entre INGInious et des tests unitaires écrits à l'aide de CUnit
# Auteurs : Pablo Gonzalez Alvarez
# Licence : GPLv3

import subprocess, shlex, os
from inginious import feedback, rst, input

# MATCH

match = input.get_input("make_me_easy")
if match == 'make make_me':
    feedback.set_problem_result("success", "make_me_easy")
else:
    feedback.set_problem_result("failed", "make_me_easy")
    feedback.set_global_result("failed")
    feedback.set_global_feedback("Fail")

# CODE

# Switch working directory to student/
os.chdir("student")

# Fetch and save the student code into a file for compilation
input.parse_template("Makefile.tpl", "Makefile")

# Compilation
p = subprocess.Popen(shlex.split("make"), stderr=subprocess.STDOUT, stdout=subprocess.PIPE)
make_output = p.communicate()[0].decode('utf-8')
# If compilation failed, exit with "failed" result
if p.returncode:
    feedback.set_global_result("failed")
    feedback.set_global_feedback("Fail")
    feedback.set_problem_feedback("La compilation de votre code a échoué. Voici le message de sortie de la commande ``make`` :")
    feedback.set_problem_feedback(rst.get_codeblock('', make_output), True)
    exit(0)
else:
    feedback.set_problem_result("success", "make_me_less_easy")
    feedback.set_problem_feedback("- Votre code compile.\n", "make_me_less_easy")
    feedback.set_global_result("success")
    feedback.set_global_feedback("Good job")


# Remove source files
subprocess.run("rm -rf *.c *.tpl *.h *.o", shell=True)

# score = 100*score/(total if not total == 0 else 1)
# feedback.set_grade(score)
# feedback.set_global_result("success" if score >= 50 else "failed")
