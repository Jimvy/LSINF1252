/student/solution.c.sol: |+
    int fd = open(filename, O_RDONLY);
    if(fd == -1) {
        return -1;
    }
    int sum = 0;
    int n2 = 0;
    int r = 1;
    while(r >= 1){
        sum = sum + n2;
        r = read(fd, (void *) &n2, sizeof(int));
        if(r == -1)
            return -2;
    }
    if (close(fd) < 0)
        return -3;

    return sum;

accessible: true
author: Olivier Martin
context: |-
    *Estimated time: 25 minutes*

    Given a file containing some (possibly none) positive integers (``int``), write a code that computes the sum of all integers present in the file. The sum have to be returned.

    - If ``open()`` fails, return ``-1``.
    - If ``read()`` fails, return ``-2``.
    - If ``close()`` fails, return ``-3``.

    Use only ``open(2)``, ``read(2)``, ``write(2)`` and ``close(2)``.
environment: cpp
evaluate: best
groups: false
limits:
    time: '30'
    memory: '100'
    output: '2'
name: '[S5] File integers reading - REVIEWED'
network_grading: false
order: 41
problems:
    q1:
        language: c
        name: Write your code here
        type: code
        header: |-
            .. code-block:: java

                /*
                 * @pre filename != NULL, name of the file
                 * @post return the sum of all integers present in the file.
                 *       return -1 if the file can not be open.
                 *       return -2 if an error occurs during reading
                 *       return -3 if close() fails.
                 */
                int sum_file(char *filename) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        name: Close
        type: 0
        id: close
        visible: true
        description: This tag validate that your close are correctly performed.
    '1':
        id: open
        description: This tag validate you are able to open a file and handle errors
            with open().
        name: Open
        visible: true
        type: 0
    '2':
        type: 0
        description: The student has correctly computed and returned the sum.
        id: sum
        name: Sum
        visible: true
    '10':
        id: failure_handling
        type: 1
        visible: true
        description: You do not manage failures properly during read operations.
        name: Failure handling
    '3':
        description: You use some banned functions.
        name: Banned functions
        id: banned_funcs
        visible: true
        type: 1
    '4':
        description: Your code produced a double free.
        visible: true
        type: 1
        id: double_free
        name: Double free
    '5':
        visible: true
        description: ''
        id: sigfpe
        name: Floating Point Exception
        type: 1
    '6':
        id: memory
        description: ''
        type: 1
        visible: true
        name: Memory Exceeded
    '7':
        id: not_compile
        name: Not compile
        visible: true
        type: 1
        description: You code does not compile.
    '8':
        id: sigsegv
        type: 1
        name: Segmentation Fault
        description: ''
        visible: true
    '9':
        id: timeout
        description: Your code exceeds the maximum allowed time.
        type: 1
        visible: true
        name: Timeout
    '11':
        type: 2
        visible: true
        name: S5
        description: ''
        id: ''
    '12':
        description: ''
        name: File
        visible: true
        type: 2
        id: ''
weight: 1.0
