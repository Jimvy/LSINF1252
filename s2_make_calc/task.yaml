accessible: true
author: Pablo Gonzalez Alvarez
context: |
    *Estimated time: 5 minutes*

    You have just built a simple calculator. When typing ``ls`` in your command line, the source folder has the following structure:

    .. code-block:: console

        calc.c    calc.h    operations.c    operations.h

    ``calc.c`` contains the calculator which handles the 4 basic operations: addition, substraction, multiplication, and division. These 4 operations are implemented in ``operations.c``.

    As you might have noticed, there are also two other files: ``calc.h`` and ``operations.h``. These are the corresponding **header** files of ``calc.c`` and ``operations.c``. These headers contain the function prototypes and specifications, but not their definitions. They can also contain ``extern`` declarations of variables. For more on that, see `this page <https://www.tutorialspoint.com/cprogramming/c_header_files.htm>`_ or chapter 4 in [kernighan2006c]_.

    When compiling this calculator, you need to specify in the Makefile rules the header files needed by ``calc.c``, that is both ``calc.h`` and ``operations.h``.

    ----

    .. [kernighan2006c] Kernighan, B. W., & Ritchie, D. M. (2006). The C programming language.
environment: cpp
evaluate: best
groups: false
limits:
    time: '30'
    memory: '100'
    output: '2'
name: '[S2] make basics - calculator'
network_grading: false
order: 23
problems:
    make_calc_simple:
        type: code
        header: |-
            Unfortunately, the source folder was lost but you still have access to the object files.

            Write a *Makefile* rule to build the executable ``calc`` from both object files ``calc.o`` and ``operations.o``. That is, you want to link the object files into the executable.

            **Hints:** You do not need to write the rules for ``operations.o`` and ``calc.o``. Do not forget the prerequisites of your rule.
        language: Makefile
        name: 'Linking '
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: make
        type: 0
        name: make & Makefile
        visible: true
        description: Tasks related to the make task runner for targets described in
            Makefile.
    '1':
        name: S2
        visible: true
        type: 2
        description: ''
        id: ''
weight: 1.0
