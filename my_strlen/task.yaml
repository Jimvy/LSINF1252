/student/tests.c: |
    // CTester template

    #include <stdlib.h>
    #include "CTester/CTester.h"
    #include "student_code.h"

    void test_my_strlen(){
      set_test_metadata("my_strlen", _("Check the return value of the function"), 2);

      int ret;

      char *s = "26fgb.thjfgjppzaerofa,zprjgfbl";

      SANDBOX_BEGIN;
      ret = my_strlen(s);
      SANDBOX_END;

      CU_ASSERT_EQUAL(ret, 30);
      if (ret != 30)
        push_info_msg(_("The function return the wrong value"));

      char *s2 = "k26fgb.thjfgjpp";

      SANDBOX_BEGIN;
      ret = my_strlen(s2);
      SANDBOX_END;

      CU_ASSERT_EQUAL(ret, 15);
      if (ret != 15)
        push_info_msg(_("The function return the wrong value"));

    }

    int main(int argc,char** argv)
    {
        BAN_FUNCS(strlen,strnlen);
        RUN(test_my_strlen);
    }
accessible: true
author: 'Nicolas Rybowski, '
context: You are asked to implement `strlen <https://linux.die.net/man/3/strlen>`_.
environment: cpp
evaluate: best
groups: false
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S2] My strlen'
network_grading: false
order: 11
problems:
    my_stlren:
        name: my_stlren
        language: c
        header: Write here your code for ``my_strlen``
        type: code
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        id: timeout
        name: Timeout
        visible: true
        type: 1
        description: Your code exceeds the maximum allowed time.
    '1':
        id: sigsegv
        name: Segmentation Fault
        visible: true
        description: ''
        type: 1
    '2':
        id: not_compile
        type: 1
        name: Not compile
        visible: true
        description: You code does not compile.
    '3':
        id: memory
        visible: true
        type: 1
        name: Memory Exceeded
        description: ''
    '4':
        name: Floating Point Exception
        description: ''
        visible: true
        id: sigfpe
        type: 1
    '5':
        id: double_free
        visible: true
        description: Your code produced a double free.
        name: Double free
        type: 1
    '6':
        description: You use some banned functions.
        id: banned_funcs
        type: 1
        visible: true
        name: Banned functions
    '7':
        name: S2
        type: 2
        description: ''
        visible: true
        id: ''
weight: 1.0
