/run: |
    #!/bin/bash

    mkdir folder
    getinput "archive" > archive.tar.gz
    tar zxvf archive.tar.gz -C folder
    if [ $? -neq 0 ]
        feedback-result failed
        feedback-msg -m "The decompression of your archive failed, did you use the right arguments?"
    else
        ls folder -R > file2.txt
        diff -q file.txt file2.txt
        if [ $? -neq 0 ]
            feedback-result failed
            feedback-msg -m "The decompressed archive does not correspond with the original?"
        else
            feedback-result success
            feedback-msg good
        fi
        rm file2.txt
    fi
    rm folder -R
accessible: true
author: Tom Rousseaux
context: |
    You have to **compress** the following file system

    .. code-block:: console

        /
            file
            folder1/
                file1.c
                file2.c
                file3.c
            folder2/
                file1.h
                fime2.h
                file3.h

    For this, use tar(1), feel free to check the arguments of this utility wherever you want.
    You can download the file system `here <https://inginious.info.ucl.ac.be/course/LSINF1252-2018/s1_tar/Enonce.zip>`_.
environment: pyjavacpp
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '100'
name: '[S01] tar'
network_grading: false
order: 1
problems:
    archive:
        header: ''
        name: ''
        type: file
        allowed_exts:
        - .gz
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags: {}
weight: 1.0
