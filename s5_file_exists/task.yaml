/student/tests.c: |
    // CTester template

    #include <stdlib.h>
    #include "student_code.h"
    #include "CTester/CTester.h"

    void test_exist_not() {
        for(int i = 0; i < 4; i++){
            set_test_metadata("q1", _("Test file does not exist"), 1);
            int ret = 0;

            system("rm file.txt");
            SANDBOX_BEGIN;
            ret = file_exists("file.txt");
            SANDBOX_END;

            if(ret != -1){
                CU_FAIL();
                push_info_msg(_("When the file does not exist, you do not return -1"));
            }else{
                 set_tag("test_file_exist_not");
            }
        }
    }

    void test_exist() {
        for(int i = 0; i < 4; i++){
            set_test_metadata("q1", _("Test file exists"), 1);
            int ret = 0;

            system("touch file.txt");
            SANDBOX_BEGIN;
            ret = file_exists("file.txt");
            SANDBOX_END;

            if(ret != 0){
                CU_FAIL();
                push_info_msg(_("When the file exist, you do not return 0"));
            }else{
                set_tag("test_file_exist");
            }
        }
    }

    int main(int argc,char** argv){
        BAN_FUNCS(system, open, set_tag);
        RUN(test_exist_not, test_exist);
    }
accessible: true
author: ''
context: Using `fstat(2) <https://linux.die.net/man/2/fstat>`_, determine if a file
    exists.
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    time: '30'
    memory: '100'
name: '[S5] File exists'
network_grading: false
problems:
    q1:
        type: code
        language: ''
        name: File exist
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL
                 * @post return 0 if the file {filename} exist. -1 Otherwise.
                 */
                 int file_exists(char* filename)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 1
        name: Banned functions
        visible: true
        id: banned_funcs
        description: You use some banned functions.
    '1':
        type: 1
        description: Your code produced a double free.
        name: Double free
        visible: true
        id: double_free
    '2':
        id: sigfpe
        name: Floating Point Exception
        description: ''
        type: 1
        visible: true
    '3':
        visible: true
        description: ''
        name: Memory Exceeded
        id: memory
        type: 1
    '4':
        visible: true
        id: not_compile
        type: 1
        description: You code do not compile.
        name: Not compile
    '5':
        id: sigsegv
        visible: true
        description: ''
        type: 1
        name: Segmentation Fault
    '6':
        id: timeout
        type: 1
        name: Timeout
        visible: true
        description: Your code exceeds the maximum allowed time.
    '7':
        visible: true
        name: S5
        description: ''
        type: 2
        id: ''
    '8':
        visible: true
        type: 2
        name: File
        description: ''
        id: ''
weight: 1.0
