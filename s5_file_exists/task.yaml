/student/tests.c: |-
    // CTester template

    #include <stdlib.h>
    #include "student_code.h"
    #include "CTester/CTester.h"

    void test_exist_not() {
        set_test_metadata("q1", _("Test file does not exist"), 1);

        // We run multiples times the test to avoid student returning randomly 1 or 0.
        for(int i = 0; i < 4; i++){
            int ret = 0;

            system("rm file.txt");
            SANDBOX_BEGIN;
            ret = file_exists("file.txt");
            SANDBOX_END;

            if(ret != -1){
                CU_FAIL();
                push_info_msg(_("When the file does not exist, you do not return -1"));
            }else{
                 set_tag("test_file_exist_not");
            }
        }
    }

    void test_exist() {
        set_test_metadata("q1", _("Test file exists"), 1);

        // We run multiples times the test to avoid student returning randomly 1 or 0.
        for(int i = 0; i < 4; i++){
            int ret = 0;

            system("touch file.txt");
            SANDBOX_BEGIN;
            ret = file_exists("file.txt");
            SANDBOX_END;

            if(ret != 0){
                CU_FAIL();
                push_info_msg(_("When the file exist, you do not return 0"));
            }else{
                set_tag("test_file_exist");
            }
        }
    }

    int main(int argc,char** argv){
        BAN_FUNCS(system, fopen, fread, fwrite, fclose, stat);
        RUN(test_exist_not, test_exist);
    }
accessible: true
author: Olivier Martin
context: |+
    *Estimated time: 10 minutes*

    Using `fstat(2) <https://linux.die.net/man/2/fstat>`_ or `open(2) <https://sites.uclouvain.be/SystInfo/manpages/man2/open.2.html>`_, determine if a file exists.

environment: cpp
evaluate: best
groups: false
limits:
    memory: '100'
    output: '2'
    time: '30'
name: '[S5] File exists'
network_grading: false
order: 46
problems:
    q1:
        name: File exist
        language: c
        type: code
        header: |-
            .. code-block:: c

                /*
                 * @pre filename != NULL
                 * @post return 0 if the file {filename} exist. -1 Otherwise.
                 */
                 int file_exists(char *filename)
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        name: Banned functions
        type: 1
        visible: true
        id: banned_funcs
        description: You use some banned functions.
    '1':
        type: 1
        visible: true
        name: Double free
        id: double_free
        description: Your code produced a double free.
    '2':
        visible: true
        description: ''
        id: sigfpe
        type: 1
        name: Floating Point Exception
    '3':
        name: Memory Exceeded
        visible: true
        description: ''
        type: 1
        id: memory
    '4':
        id: not_compile
        name: Not compile
        description: You code does not compile.
        visible: true
        type: 1
    '5':
        visible: true
        description: ''
        id: sigsegv
        name: Segmentation Fault
        type: 1
    '6':
        id: timeout
        name: Timeout
        type: 1
        description: Your code exceeds the maximum allowed time.
        visible: true
    '7':
        description: ''
        visible: true
        type: 2
        name: S5
        id: ''
    '8':
        type: 2
        description: ''
        name: File
        visible: true
        id: ''
weight: 1.0
