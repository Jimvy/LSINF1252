accessible: true
author: Mathieu Xhonneux & Maxime Mawait
context: |-
    The system call malloc may fail, for instance if the OS has no free memory remaining. In this case, it may be possible that some other processes free some memory after some time.

    In our program, instead of reporting an error immediately if no free memory is available, we will wait some time to see if the OS can free memory for us.
environment: cpp
evaluate: best
groups: false
limits:
    output: '2'
    memory: '100'
    time: '30'
name: '[S3] Sleepy malloc'
network_grading: false
order: 29
problems:
    sleep_malloc:
        name: Sleepy malloc
        language: c
        type: code
        header: |-
            Write the body of the function *sleepy_malloc*.

            Hint : think about static variables.

            .. code-block:: c

                /* Wrapper to the malloc system call.
                 * If malloc fails, sleep for 5 seconds, and re-try.
                 * If malloc failed 10 times in a row, return NULL.
                 */
                void *sleepy_malloc(size_t s) {
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 1
        name: Timeout
        id: timeout
        description: Your code exceeds the maximum allowed time.
        visible: true
    '1':
        visible: true
        description: ''
        name: Segmentation Fault
        type: 1
        id: sigsegv
    '2':
        type: 1
        visible: true
        description: You code does not compile.
        name: Not compile
        id: not_compile
    '3':
        type: 1
        id: memory
        description: ''
        visible: true
        name: Memory Exceeded
    '4':
        visible: true
        type: 1
        description: ''
        name: Floating Point Exception
        id: sigfpe
    '5':
        description: Your code produced a double free.
        type: 1
        visible: true
        id: double_free
        name: Double free
    '6':
        description: You use some banned functions.
        type: 1
        name: Banned functions
        visible: true
        id: banned_funcs
    '7':
        name: S3
        type: 2
        description: ''
        visible: true
        id: ''
weight: 1.0
