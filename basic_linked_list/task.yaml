accessible: true
author: Maxime Mawait & Nicolas Rybowski
context: |+
    We ask you to write two simple functions that are  needed to implement a simple linked list.


    .. code-block:: c

        /**
        * Structure node
        *
        * @next: pointer to the next node in the list, NULL if last node_t
        * @value: value stored in the node
        */
        typedef struct node {
          struct node *next;
          int value;
        } node_t;

        /**
        * Structure list
        *
        * @first: first node of the list, NULL if list is empty
        * @size: number of nodes in the list
        */
        typedef struct list {
          struct node *first;
          int size;
        } list_t;


    **In your functions, you cannot use the function** `calloc(3) <https://sites.uclouvain.be/SystInfo/manpages/man3/malloc.3.html>`_

environment: cpp
evaluate: best
groups: false
input_random: '0'
limits:
    output: '2'
    time: '30'
    memory: '100'
name: '[S3] Simple linked list '
network_grading: false
order: 30
problems:
    init_node:
        header: |
            .. code-block:: c

                /*
                * Create a new node containing the value @value.
                *
                * @value: value stored in the node
                * @return: returns the pointer to the newly created node, or NULL if an error occured.
                */
                node_t *init_node(int value) {
        type: code
        name: Node initialisation
        language: c
    add_node:
        header: |
            .. code-block:: c

                /*
                * Add a node at the head of the list @list and increment the number of nodes in the list (member `size`)
                *
                * @l: linked list
                * @value: value to add to the list
                *
                * @return: 0 if success, 1 otherwise
                */
                int add_node(list_t *list, int value);
        name: Adding a node
        type: code
        language: c
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 1
        id: timeout
        visible: true
        description: Your code exceeds the maximum allowed time.
        name: Timeout
    '1':
        description: ''
        visible: true
        id: sigsegv
        type: 1
        name: Segmentation Fault
    '10':
        type: 1
        description: Your function returns an error in normal case.
        name: Error normal case
        id: error_normal_case
        visible: false
    '11':
        name: Wrong list size
        description: The list has not the expected size.
        type: 1
        id: wrong_list_size
        visible: false
    '12':
        id: wrong_args_handling
        description: Wrong return value when wrong args.
        type: 1
        name: Bad Args handling
        visible: false
    '13':
        description: The linked list does not correspond to the waited one.
        type: 1
        name: Incorrect list
        id: not_expected_list
        visible: false
    '14':
        description: The list was modified while the malloc() fails.
        name: Modif list malloc fail
        type: 1
        id: modif_list_malloc_fail
        visible: false
    '15':
        type: 1
        description: You code does not compile.
        id: not_compile
        visible: true
        name: Not compile
    '16':
        type: 1
        visible: true
        description: ''
        id: memory
        name: Memory Exceeded
    '17':
        visible: true
        name: Floating Point Exception
        id: sigfpe
        description: ''
        type: 1
    '18':
        visible: true
        id: double_free
        name: Double free
        type: 1
        description: Your code produced a double free.
    '2':
        description: You use some banned functions.
        name: Banned functions
        type: 1
        visible: true
        id: banned_funcs
    '3':
        name: Not malloc once
        type: 1
        id: not_malloc_once
        description: The malloc() functions was not called exactly once.
        visible: false
    '4':
        id: SCRIPT_ERROR
        description: SCRIPT_ERROR - This tag should not appear. If it appears this
            is probably an error in the test suite of this task.
        type: 1
        name: SCRIPT ERROR
        visible: false
    '5':
        type: 1
        id: malloc_fail_memory_size
        description: The allocated memory has not the correct size.
        name: Wrong malloc memory size
        visible: false
    '6':
        id: bad_node_value
        type: 1
        name: Bad node value
        description: The value of the node is not the expected one.
        visible: false
    '7':
        description: The 'next' pointer is not correctly initialised
        name: Bad next pointer
        type: 1
        id: bad_next_pointer
        visible: false
    '8':
        description: Wrong return value when malloc call fails.
        name: Malloc fail handling
        id: malloc_fail_handling
        type: 1
        visible: false
    '9':
        id: not_allocated
        name: Not allocated
        description: A new node is not allocated with malloc().
        type: 1
        visible: false
    '19':
        visible: true
        description: ''
        name: S3
        type: 2
        id: ''
    '20':
        description: Task dealing with data structures and linked list
        name: Data structures
        visible: true
        type: 2
        id: ''
    '21':
        visible: true
        type: 2
        description: Usage of malloc()
        name: Malloc
        id: ''
weight: 1.0
