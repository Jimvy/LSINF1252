accessible: true
author: Maxime Mawait & Nicolas Rybowski
context: |+
    On vous demande d'implémenter une liste chaînée de base. Pour ce faire, vous devrez manipuler des pointeurs.

    **Vous ne pouvez pas utiliser \``calloc\``**

    .. code-block:: c

        /**
        * Structure node
        *
        * @next: pointer to the next node in the list, NULL if last node_t
        * @value: value of the node
        */
        typedef struct node{
          struct node *next;
          int value;
        } node_t;

        /**
        * Structure list
        *
        * @first: first node of the list, NULL if empty
        * @size: number of nodes in the list.
        */
        typedef struct list {
          struct node *first;
          int *size;
        } list_t;


environment: pyjavacpp
evaluate: best
groups: false
limits:
    time: '30'
    output: '2'
    memory: '100'
name: '[S3] Liste chaînée basique'
network_grading: false
order: 13
problems:
    init_node:
        language: c
        header: |
            .. code-block:: c

                /*
                * Create a new node with the value @value
                *
                * @value: value of the node
                * @return: return the pointer to the new node, NULL either.
                */
                node_t *init_node(int value){
        name: Initialisation d'un noeud
        type: code
    add_node:
        language: c
        type: code
        header: |
            *N'oubliez pas de mettre à jour la taille de la liste.*

            .. code-block:: c

                /*
                * Add an element to the head of the list @list
                *
                * @l: list of integers
                * @value: value to add to the list
                *
                * @return: 0 if success, 1 either
                */
                int add_node(list_t *list, int value);
        name: Ajout d'un noeud
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
tags:
    '0':
        type: 2
        description: Task dealing with data structures and linked list
        visible: true
        name: Data structures
        id: ''
weight: 1.0
